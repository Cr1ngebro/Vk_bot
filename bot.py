import os
import json
import random
import threading
from flask import Flask
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
GROUP_TOKEN = os.getenv("GROUP_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))
GROUP_ID = int(os.getenv("GROUP_ID"))
PAYMENT_DETAILS = os.getenv("PAYMENT_DETAILS")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK API
vk_session = vk_api.VkApi(token=GROUP_TOKEN)
longpoll = VkBotLongPoll(vk_session, group_id=GROUP_ID)
vk = vk_session.get_api()

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

@app.route("/")
def index():
    return "‚úÖ Bot is running."

def send_message(user_id, message, keyboard=None):
    vk.messages.send(
        user_id=user_id,
        message=message,
        keyboard=json.dumps(keyboard) if keyboard else None,
        random_id=random.randint(1, 2**31 - 1)
    )

def get_keyboard():
    return {
        "one_time": False,
        "buttons": [
            [
                {
                    "action": {
                        "type": "text",
                        "label": "üì• –†–µ–∫–≤–∏–∑–∏—Ç—ã",
                        "payload": json.dumps({"button": "payment_details"})
                    },
                    "color": "positive"
                },
                {
                    "action": {
                        "type": "text",
                        "label": "üìÑ –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
                        "payload": json.dumps({"button": "terms"})
                    },
                    "color": "primary"
                }
            ],
            [
                {
                    "action": {
                        "type": "text",
                        "label": "üÜò –ü–æ–∑–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞",
                        "payload": json.dumps({"button": "call_admin"})
                    },
                    "color": "negative"
                }
            ]
        ]
    }

def bot_loop():
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.from_user:
            message = event.object.message
            user_id = message['from_id']

            payload = message.get('payload')

            if not payload:
                text = message['text'].lower()
                if text in ['–Ω–∞—á–∞—Ç—å', 'start', '–ø—Ä–∏–≤–µ—Ç']:
                    send_message(user_id, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", keyboard=get_keyboard())
                continue

            try:
                data = json.loads(payload)
                button = data.get('button')
            except:
                button = None

            if button == 'payment_details':
                send_message(user_id, PAYMENT_DETAILS or "‚ö† –†–µ–∫–≤–∏–∑–∏—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            elif button == 'terms':
                send_message(user_id, "üìå –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n1. https://vk.com/wall-219520002_32382")
            elif button == 'call_admin':
                send_message(user_id, "‚úÖ –ê–¥–º–∏–Ω —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")
                send_message(ADMIN_ID, f"üîî –í–∞—Å –≤—ã–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: https://vk.com/id{user_id}")
            else:
                send_message(user_id, "‚ùì –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.", keyboard=get_keyboard())

# –ó–∞–ø—É—Å–∫–∞–µ–º longpoll –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=bot_loop, daemon=True).start()

# –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
